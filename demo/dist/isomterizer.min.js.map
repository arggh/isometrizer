{"version":3,"file":"isomterizer.min.js","sources":["../src/errors.ts","../src/utils/matrix.ts","../src/constants.ts","../src/utils/orientation.ts","../src/utils/transform.ts","../src/panel.ts","../src/utils/helper.ts","../src/iso-layer.ts","../src/isometrizer.ts"],"sourcesContent":["/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nexport const SELECTOR_NOT_SPECIFIED = \"Element selector is not specified\";\nexport const ORIENTATION_NOT_SPECIFIED = \"Orientation is not correctly specified for Isometrizer\";\n\nexport const MATRIX_VALUE_NOT_PROVIDED = \"Values for matrix is not provided\";\nexport const MATRIX_SHOULD_MUTIPLIED_WITH_OTHER_MATRIX = \"Multiplyee for matrix should be another matrix\";\nexport const VECTOR_OPERAND_NOT_VALIDATED = \"Operand for vector is not in correct type\";\nexport const VECTOR_PROPERTY_NOT_PROVIDED = \"One of the Vector's 3 property(x, y, z) is not provided\";\n","/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport {\n    MATRIX_VALUE_NOT_PROVIDED,\n    MATRIX_SHOULD_MUTIPLIED_WITH_OTHER_MATRIX,\n} from \"../errors\";\n\nconst MATRIX_SIDE = 3;\nconst MATRIX_SIZE = 9;\n\n// This class supposes that scale and traslation is already applied\nexport default class Matrix3x3 {\n    static get ZERO() {\n        return new Matrix3x3([\n            0, 0, 0,\n            0, 0, 0,\n            0, 0, 0,\n        ]);\n    }\n\n    static get ONE() {\n        return new Matrix3x3([\n            1, 0, 0,\n            0, 1, 0,\n            0, 0, 1,\n        ]);\n    }\n\n    private _values: number[];\n\n    get values() { return this._values; }\n\n    constructor(values: number[]) {\n        if (!values) throw new Error(MATRIX_VALUE_NOT_PROVIDED);\n        if (!values.length) throw new Error(MATRIX_VALUE_NOT_PROVIDED);\n        if (values.length !== MATRIX_SIZE) throw new Error(MATRIX_VALUE_NOT_PROVIDED);\n\n        this._values = values;\n    }\n\n    public mul(other: Matrix3x3) {\n        if (other instanceof Matrix3x3) {\n            this._multiply3x3(other);\n        } else {\n            throw new Error(MATRIX_SHOULD_MUTIPLIED_WITH_OTHER_MATRIX);\n        }\n        return this;\n    }\n\n    public rotateX(degree: number) {\n        const rad = this._degToRad(degree);\n        const cos = Math.cos(rad);\n        const sin = Math.sin(rad);\n        const rotateMatrix = new Matrix3x3([\n            1, 0, 0,\n            0, cos, -sin,\n            0, sin, cos,\n        ]);\n\n        this.mul(rotateMatrix);\n    }\n\n    public rotateY(degree: number) {\n        const rad = this._degToRad(degree);\n        const cos = Math.cos(rad);\n        const sin = Math.sin(rad);\n        const rotateMatrix = new Matrix3x3([\n            cos, 0, sin,\n            0, 1, 0,\n            -sin, 0, cos,\n        ]);\n\n        this.mul(rotateMatrix);\n    }\n\n    public rotateZ(degree: number) {\n        const rad = this._degToRad(degree);\n        const cos = Math.cos(rad);\n        const sin = Math.sin(rad);\n        const rotateMatrix = new Matrix3x3([\n            cos, -sin, 0,\n            sin, cos, 0,\n            0, 0, 1,\n        ]);\n\n        this.mul(rotateMatrix);\n    }\n\n    public scale(props = {x: 1, y: 1, z: 1}) {\n        const scaleX = props.x || 1;\n        const scaleY = props.y || 1;\n        const scaleZ = props.z || 1;\n\n        this._values[0] *= scaleX;\n        this._values[4] *= scaleY;\n        this._values[8] *= scaleZ;\n    }\n\n    public toString4x4() {\n        const values = [\n            this._values[0], this._values[3], this._values[6],\n            this._values[1], this._values[4], this._values[7],\n            this._values[2], this._values[5], this._values[8],\n        ];\n\n        const v = values.map((value: number) => value.toFixed(4));\n\n        return `${v[0]}, ${v[1]}, ${v[2]}, 0, ${v[3]}, ${v[4]}, ${v[5]}, 0, ${v[6]}, ${v[7]}, ${v[8]}, 0, 0, 0, 0, 1`;\n    }\n\n    // Check deep equality\n    public match(other: Matrix3x3) {\n        let flag = true;\n\n        for (let i = 0; i < this._values.length; i += 1) {\n            if (this._values[i] !== other._values[i]) {\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    // other * this\n    private _multiply3x3(other: Matrix3x3) {\n        const result = Matrix3x3.ZERO;\n\n        for (let i = 0; i < MATRIX_SIZE; i += 1) {\n            const rowNum = Math.floor(i / MATRIX_SIDE);\n            const colNum = i % MATRIX_SIDE;\n\n            for (let j = 0; j < MATRIX_SIDE; j += 1) {\n                const indexThis = j * MATRIX_SIDE + colNum;\n                const indexOther = rowNum * MATRIX_SIDE + j;\n\n                result.values[i] += this._values[indexThis] * other._values[indexOther];\n            }\n        }\n        this._values = result.values;\n    }\n\n    private _degToRad(degree: number) {\n        return degree * Math.PI / 180;\n    }\n}\n","/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nexport const SQRT_2 = Math.sqrt(2);\nexport const SQRT_3 = Math.sqrt(3);\n\nexport const ISO_NONE = 0b0000;\nexport const ISO_LEFT = 0b0001;\nexport const ISO_RIGHT = 0b0010;\nexport const ISO_VERTICAL = 0b0100;\nexport const ISO_HORIZONTAL = 0b1000;\n\nexport const ISO_DEFAULT_SPACING = 40;\nexport const ISO_DEFAULT_ORIENTATION = ISO_VERTICAL | ISO_RIGHT;\n\nexport const ISO_DEFAULT_SIDE_COLOR = \"grey\";\nexport const ISO_DEFAULT_TOP_COLOR = \"lightgrey\";\n","/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport {\n    ISO_LEFT, ISO_RIGHT, ISO_HORIZONTAL, ISO_VERTICAL, ISO_NONE,\n} from \"../constants\";\nimport {\n    ORIENTATION_NOT_SPECIFIED,\n} from \"../errors\";\n\nexport default class Orientation {\n    public static fromString(orientationStr: string) {\n        const parseString = (str: string) => {\n            switch (str) {\n                case \"vertical\":\n                    return new Orientation(ISO_VERTICAL);\n                case \"horizontal\":\n                    return new Orientation(ISO_HORIZONTAL);\n                case \"left\":\n                    return new Orientation(ISO_LEFT);\n                case \"right\":\n                    return new Orientation(ISO_RIGHT);\n                default:\n                    throw new Error(ORIENTATION_NOT_SPECIFIED);\n            }\n        };\n\n        const orientations = orientationStr.split(\"|\")\n            .map(str => {\n                let sanitizedStr = str.trim();\n\n                sanitizedStr = sanitizedStr.toLowerCase();\n                return parseString(sanitizedStr);\n            });\n\n        if (orientations.length < 0) throw new Error(ORIENTATION_NOT_SPECIFIED);\n\n        const result = new Orientation(ISO_NONE);\n\n        for (const orientation of orientations) {\n            result.merge(orientation);\n        }\n\n        return result;\n    }\n\n    private _val: number;\n\n    constructor(val: number) {\n        if (val < 0 || val > 0b1111) throw Error(ORIENTATION_NOT_SPECIFIED);\n        this._val = val;\n    }\n\n    get isLeft() { return (this._val & ISO_LEFT) > 0; }\n    get isRight() { return (this._val & ISO_RIGHT) > 0; }\n    get isHorizontal() { return (this._val & ISO_HORIZONTAL) > 0; }\n    get isVertical() { return (this._val & ISO_VERTICAL) > 0; }\n    get isSide() { return (this._val & (ISO_LEFT + ISO_RIGHT)) > 0; }\n    get isNormal() { return (this._val & (ISO_HORIZONTAL + ISO_VERTICAL)) > 0; }\n    get normal() { return new Orientation(this._val & (ISO_HORIZONTAL + ISO_VERTICAL)); }\n    get side() { return new Orientation(this._val & (ISO_LEFT + ISO_RIGHT)); }\n\n    public checkMutualExclusion() {\n        // Mutual exclusion test\n        if ((this.isHorizontal === this.isVertical)\n            || (this.isLeft === this.isRight)) {\n            throw Error(ORIENTATION_NOT_SPECIFIED);\n        }\n    }\n\n    public has(other: Orientation) {\n        return (this._val & other._val) > 0;\n    }\n\n    public match(other: Orientation) {\n        return this._val === other._val;\n    }\n\n    public merge(other: Orientation) {\n        this._val = this._val | other._val;\n    }\n}\n","/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport Matrix3x3 from \"./matrix\";\nimport Orientation from \"./orientation\";\nimport { ISO_NONE } from \"../constants\";\n\nexport default class Transform {\n    private _rotationDegree: {\n        normal: {\n            x: number; y: number; z: number;\n        },\n        side: {\n            x: number; y: number; z: number;\n        },\n    };\n    private _matrix: Matrix3x3;\n    private _float: number;\n\n    constructor(orientation: Orientation, parentOrientation: Orientation) {\n        this._rotationDegree = this._calcRotationDegree(orientation, parentOrientation);\n\n        // default values\n        this._matrix = Matrix3x3.ONE;\n        this._float = 0;\n    }\n\n    get changed() { return !(this._matrix.match(Matrix3x3.ONE) && this._float === 0); }\n\n    public rotateTo(props: {\n        normal: number;\n        side: number;\n    }) {\n        const normal = props.normal;\n        const side = props.side;\n\n        // rotate in order of Z-Y-X\n        const degreeZ = normal * this._rotationDegree.normal.z + side * this._rotationDegree.side.z;\n        const degreeY = normal * this._rotationDegree.normal.y + side * this._rotationDegree.side.y;\n        const degreeX = normal * this._rotationDegree.normal.x + side * this._rotationDegree.side.x;\n\n        this._matrix.rotateZ(degreeZ);\n        this._matrix.rotateY(degreeY);\n        this._matrix.rotateX(degreeX);\n    }\n\n    public toString() {\n        if (!this.changed) {\n            return \"none\";\n        } else {\n            return `matrix3d(${this._matrix.toString4x4()}) translateZ(${this._float.toFixed(4)}px)`;\n        }\n    }\n\n    public setScale(val: number) {\n        this._matrix.scale({x: val, y: val, z: val});\n    }\n\n    public setFloat(val: number) {\n        this._float = val;\n    }\n\n    public reset() {\n        this._matrix = Matrix3x3.ONE;\n    }\n\n    private _calcRotationDegree(orientation: Orientation, parentOrientation: Orientation) {\n        const rotations = {\n            normal: {x: 0, y: 0, z: 0},\n            side: {x: 0, y: 0, z: 0},\n        };\n\n        // Don't rotate\n        if (orientation.match(new Orientation(ISO_NONE))) return rotations;\n\n        if (parentOrientation.match(new Orientation(ISO_NONE))) {\n            rotations.normal.x = orientation.isHorizontal ? 55 : -35;\n            if (orientation.isVertical) {\n                rotations.side.y = orientation.isLeft ? -45 : 45;\n            } else {\n                rotations.side.z = orientation.isLeft ? 45 : -45;\n            }\n        } else if (parentOrientation.isHorizontal) {\n            if (orientation.isHorizontal) {\n                rotations.side.z = parentOrientation.isRight ? 90 : -90;\n            } else {\n                rotations.normal.x = -90;\n                if (!parentOrientation.side.match(orientation.side)) {\n                    rotations.side.y = parentOrientation.isRight ? -90 : 90;\n                }\n            }\n        } else if (parentOrientation.isVertical) {\n            if (orientation.isVertical) {\n                rotations.side.y = parentOrientation.isRight ? -90 : 90;\n            } else {\n                rotations.normal.x = 90;\n                if (!parentOrientation.side.match(orientation.side)) {\n                    rotations.side.z = parentOrientation.isRight ? 90 : -90;\n                }\n            }\n        }\n\n        return rotations;\n    }\n}\n","/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport {\n    SQRT_3,\n} from \"./constants\";\nimport Orientation from \"./utils/orientation\";\n\nexport default class Panel {\n    private _element: HTMLElement;\n\n    private _length: number;\n    private _maxLength: number;\n    private _orientation: Orientation;\n    private _rotation: string;\n    private _offset: {\n        top: number;\n        bottom: number;\n        left: number;\n        right: number;\n    };\n\n    constructor(target: HTMLElement, maxLength: number, orientation: Orientation) {\n        this._length = 0;\n        this._maxLength = maxLength;\n        this._orientation = orientation;\n\n        target.style.transformStyle = \"preserve-3d\";\n\n        this._element = document.createElement(\"div\");\n        this._element.style.position = \"absolute\";\n        this._element.style.backfaceVisibility = \"hidden\";\n\n        if (this._orientation.isHorizontal) {\n            this._element.style.width = \"100%\";\n            this._element.style.height = `${this._maxLength}px`;\n        } else {\n            this._element.style.width = `${this._maxLength}px`;\n            this._element.style.height = \"100%\";\n        }\n\n        if (this._orientation.isHorizontal && this._orientation.isRight) {\n            this._element.style.bottom = \"0\";\n        } else {\n            this._element.style.top = \"0\";\n        }\n\n        if (this._orientation.isVertical && this._orientation.isRight) {\n            this._element.style.right = \"0\";\n        } else {\n            this._element.style.left = \"0\";\n        }\n\n        let xOrigin = 50;\n        let yOrigin = 50;\n\n        if (this._orientation.isHorizontal) {\n            yOrigin = this._orientation.isLeft ? 0 : 100;\n            this._rotation = this._orientation.isLeft ? \"rotateX(90deg)\" : \"rotateX(-90deg)\";\n        } else {\n            xOrigin = this._orientation.isLeft ? 0 : 100;\n            this._rotation = this._orientation.isLeft ? \"rotateY(-90deg)\" : \"rotateY(90deg)\";\n        }\n\n        this._element.style.transformOrigin = `${xOrigin}% ${yOrigin}%`;\n\n        target.appendChild(this._element);\n\n        // space offset\n        this._offset = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n        };\n    }\n\n    get offset() { return this._offset; }\n\n    set background(val: string) { this._element.style.background = val; }\n\n    public progress(float: number, scale: number, targetOrientation: Orientation): void {\n        this._length = Number((float * this._maxLength).toFixed(4));\n\n        const rotationModificator = 324.48 / 400;\n        const length = this._length * scale * rotationModificator;\n\n        // 옆면 추가로 인한 공간 차지 Offset 보강\n        if (targetOrientation.isHorizontal) {\n            this._offset.bottom = length;\n        } else {\n            this._offset.top = length / 2;\n            this._offset.left = targetOrientation.isRight ? SQRT_3 * length / 2 : 0;\n            this._offset.right = targetOrientation.isLeft ? SQRT_3 * length / 2 : 0;\n        }\n    }\n\n    public update(): void {\n        let scaleX = 1;\n        let scaleY = 1;\n\n        if (this._orientation.isVertical) {\n            scaleX = this._length / this._maxLength;\n        } else {\n            scaleY = this._length / this._maxLength;\n        }\n\n        this._element.style.transform = `translateZ(${-this._length}px) ${this._rotation} scale(${scaleX}, ${scaleY})`;\n    }\n}\n","/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport {\n    SELECTOR_NOT_SPECIFIED,\n} from \"../errors\";\n\nexport const getElement = (queryOrElement: HTMLElement | string): HTMLElement => {\n    if (typeof queryOrElement === \"string\") {\n        return document.querySelector(queryOrElement) as HTMLElement;\n    } else if (queryOrElement.nodeType > 0) {\n        return queryOrElement;\n    } else {\n        throw new Error(SELECTOR_NOT_SPECIFIED);\n    }\n};\n\nexport const setWrapperSize = (element: HTMLElement, wrapper: HTMLElement) => {\n    const bbox = element.getBoundingClientRect();\n\n    wrapper.style.width = `${bbox.width}px`;\n    wrapper.style.height = `${bbox.height}px`;\n};\n\nexport const wrapElement = (element: HTMLElement, isLeaf: boolean = false): HTMLElement => {\n    const wrapper = document.createElement(\"div\");\n    const elStyle = getComputedStyle(element);\n    const isFirefox = navigator.userAgent.indexOf(\"Firefox\") > 0;\n\n    if (elStyle.position === \"absolute\" || elStyle.position === \"fixed\") {\n        wrapper.style.position = elStyle.position;\n        wrapper.style.top = elStyle.top;\n        wrapper.style.left = elStyle.left;\n    } else {\n        wrapper.style.position = \"relative\";\n    }\n\n    if (elStyle.display !== \"inline\" &&\n        elStyle.display !== \"content\" &&\n        elStyle.display !== \"unset\") {\n        wrapper.style.display = elStyle.display;\n    }\n\n    wrapper.style.backfaceVisibility = \"hidden\";\n    wrapper.style.overflow = \"visible\";\n    (wrapper.style as any).willChange = \"transform\";\n    wrapper.style.pointerEvents = elStyle.pointerEvents;\n\n    setWrapperSize(element, wrapper);\n\n    element.parentElement!.replaceChild(wrapper, element);\n    wrapper.appendChild(element);\n\n    if (!isLeaf) {\n        element.style.transformStyle = \"preserve-3d\";\n    }\n    element.style.overflow = \"visible\";\n    if (!isFirefox) {\n        (element.style as any).willChange = \"transform\";\n    }\n    element.style.position = \"absolute\";\n    element.style.top = \"0\";\n    element.style.left = \"0\";\n    element.style.right = \"0\";\n\n    return wrapper;\n};\n\nexport interface ArrayLike<T> {\n    length: number;\n    [index: number]: T;\n}\n\nexport function toArray<T>(iterable: ArrayLike<T>): T[] {\n    return [].slice.call(iterable);\n}\n","/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport Transform from \"./utils/transform\";\nimport Orientation from \"./utils/orientation\";\nimport Panel from \"./panel\";\nimport {\n    ISO_DEFAULT_SIDE_COLOR,\n    ISO_DEFAULT_TOP_COLOR,\n    ISO_HORIZONTAL,\n    ISO_RIGHT,\n    ISO_LEFT,\n    ISO_VERTICAL,\n} from \"./constants\";\nimport { wrapElement, toArray } from \"./utils/helper\";\nimport { Oriented } from \"./types\";\n\nclass IsoLayer implements Oriented {\n    private _wrapper: HTMLElement;\n    private _element: HTMLElement;\n    private _parent: Oriented;\n    private _childs: IsoLayer[];\n    private _panels: Panel[];\n    private _orientation: Orientation;\n    private _transform: Transform;\n    private _isWrapper: boolean;\n    private _isLeaf: boolean;\n    private _spacing: number;\n\n    public get orientation() { return this._orientation; }\n\n    constructor(el: HTMLElement, parent: Oriented, defaultSpacing: number) {\n        this._element = el;\n        this._parent = parent;\n        this._childs = [];\n        this._orientation = parent.orientation;\n\n        const wrapSpacing = el.getAttribute(\"iso-wrap-spacing\");\n\n        this._isWrapper = (wrapSpacing !== null);\n        this._isLeaf = (el.getAttribute(\"iso-no-spacing\") !== null) || this._isWrapper;\n\n        if (this._isWrapper) {\n            this._spacing = Number(wrapSpacing) || defaultSpacing;\n        } else if (!this._isLeaf) {\n            const spacing = el.getAttribute(\"iso-spacing\");\n\n            this._spacing = spacing !== null ?\n                Number(spacing) : defaultSpacing;\n        } else {\n            // no-spacing\n            this._spacing = 0;\n        }\n\n        const rotations = el.getAttribute(\"iso-rotation\");\n\n        if (rotations !== null) {\n            this._orientation = Orientation.fromString(rotations);\n            if (!(this._orientation.isNormal)) {\n                this._orientation.merge(parent.orientation.normal);\n            }\n            if (!(this._orientation.isSide)) {\n                this._orientation.merge(parent.orientation.side);\n            }\n        }\n        this._transform = new Transform(this._orientation, this._parent.orientation);\n\n        this._wrapper = wrapElement(this._element, this._isLeaf);\n        if (!this._isLeaf) {\n            this._wrapper.style.transformStyle = \"preserve-3d\";\n        }\n\n        this._setTransformOrigin();\n\n        if (this._shouldTraverse()) {\n            this._findChilds(defaultSpacing);\n        }\n\n        if (this._childs.length <= 0) this._isLeaf = true;\n\n        this._panels = this._makePanel();\n    }\n\n    get wrapper() { return this._wrapper; }\n\n    public progress(float: number, normal: number, side: number, scale: number, maxBbox: ClientRect) {\n        this._transform.reset();\n        this._transform.setFloat(float * this._spacing);\n        if (!this._orientation.match(this._parent.orientation)) {\n            this._transform.rotateTo({\n                normal,\n                side,\n            });\n        }\n\n        const additionalOffset = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n        };\n\n        for (const panel of this._panels) {\n            panel.progress(float, scale, this._orientation);\n\n            const panelOffset = panel.offset;\n\n            additionalOffset.top = additionalOffset.top || panelOffset.top;\n            additionalOffset.bottom = additionalOffset.bottom || panelOffset.bottom;\n            additionalOffset.left = additionalOffset.left || panelOffset.left;\n            additionalOffset.right = additionalOffset.right || panelOffset.right;\n        }\n\n        const bbox = this._element.getBoundingClientRect();\n\n        if (bbox.top - additionalOffset.top < maxBbox.top) {\n            maxBbox.top = bbox.top - additionalOffset.top;\n        }\n        if (bbox.bottom + additionalOffset.bottom > maxBbox.bottom) {\n            maxBbox.bottom = bbox.bottom + additionalOffset.bottom;\n        }\n        if (bbox.left - additionalOffset.left < maxBbox.left) {\n            maxBbox.left = bbox.left - additionalOffset.left;\n        }\n        if (bbox.right + additionalOffset.right > maxBbox.right) {\n            maxBbox.right = bbox.right - additionalOffset.right;\n        }\n\n        for (const child of this._childs) {\n            child.progress(float, normal, side, scale, maxBbox);\n        }\n    }\n\n    public update() {\n        const isFirefox = navigator.userAgent.indexOf(\"Firefox\") > 0;\n\n        if (!isFirefox) {\n            if (this._isLeaf) {\n                if (this._transform.changed) {\n                    this._wrapper.style.transformStyle = \"preserve-3d\";\n                } else {\n                    this._wrapper.style.transformStyle = \"flat\";\n                }\n            }\n        } else {\n            this._wrapper.style.transformStyle = \"preserve-3d\";\n        }\n\n        this._wrapper.style.transform = this._transform.toString();\n        for (const panel of this._panels) {\n            panel.update();\n        }\n    }\n\n    public addParallelLayer(layer: IsoLayer) {\n        this._wrapper.appendChild(layer.wrapper);\n        this._childs.push(layer);\n    }\n\n    public getAllChildLayers(): IsoLayer[] {\n        const layers = [];\n\n        for (const child of this._childs) {\n            layers.push(child);\n            layers.push(...child.getAllChildLayers());\n        }\n\n        return layers;\n    }\n\n    private _makePanel() {\n        const element = this._element;\n        const spacing = this._spacing;\n        const orientation = this._orientation;\n\n        let topBackground = element.getAttribute(\"iso-top-background\");\n        let sideBackground = element.getAttribute(\"iso-side-background\");\n        const sideLengthStr = element.getAttribute(\"iso-side-length\");\n\n        const hasPanel = topBackground !== null || sideBackground !== null || sideLengthStr !== null;\n\n        const sideLength = sideLengthStr ? Number(sideLengthStr) : Number(spacing);\n\n        const panels = [];\n\n        if (hasPanel) {\n            topBackground = topBackground || ISO_DEFAULT_TOP_COLOR;\n            sideBackground = sideBackground || ISO_DEFAULT_SIDE_COLOR;\n\n            const topPanelOrientation = orientation.isHorizontal ?\n                new Orientation(ISO_HORIZONTAL | ISO_RIGHT) :\n                new Orientation(ISO_HORIZONTAL | ISO_LEFT);\n\n            const sidePanelOrientation = orientation.isLeft ?\n                new Orientation(ISO_VERTICAL | ISO_RIGHT) :\n                new Orientation(ISO_VERTICAL | ISO_LEFT);\n\n            const topPanel = new Panel(element, sideLength, topPanelOrientation);\n            const sidePanel = new Panel(element, sideLength, sidePanelOrientation);\n\n            topPanel.background = topBackground;\n            sidePanel.background = sideBackground;\n\n            panels.push(topPanel);\n            panels.push(sidePanel);\n        }\n\n        return panels;\n    }\n\n    private _findChilds(defaultSpacing: number) {\n        const isParallel = (this._element.getAttribute(\"iso-parallel\") !== null);\n\n        if (!this._element.children[0]) return;\n\n        if (isParallel) {\n            let parentLayer = new IsoLayer(this._element.children[0] as HTMLElement, this, defaultSpacing);\n\n            this._childs.push(parentLayer);\n\n            while (this._element.children[1]) {\n                const layer = new IsoLayer(this._element.children[1] as HTMLElement, parentLayer, defaultSpacing);\n\n                parentLayer.addParallelLayer(layer);\n                parentLayer = layer;\n            }\n        } else {\n            for (const child of toArray(this._element.children)) {\n                const layer = new IsoLayer(child as HTMLElement, this, defaultSpacing);\n\n                this._childs.push(layer);\n            }\n        }\n    }\n\n    private _shouldTraverse() {\n        const tag = this._element.tagName.toLowerCase();\n\n        if (this._isWrapper) { return false; }\n        if (this._isLeaf) { return false; }\n        if (tag === \"a\") { return false; }\n        if (tag === \"iframe\") { return false; }\n        return true;\n    }\n\n    private _setTransformOrigin() {\n        const orientation = this._orientation;\n        const parentOrientation = this._parent.orientation;\n        let xOrigin = 0;\n        let yOrigin = 0;\n\n        if (parentOrientation.isVertical && parentOrientation.isLeft) {\n            xOrigin = 100;\n        }\n\n        if (parentOrientation.isHorizontal) {\n            if (orientation.isHorizontal) {\n                xOrigin = 50;\n                yOrigin = 50;\n            } else {\n                xOrigin = parentOrientation.isRight ? 100 : 0;\n                yOrigin = 100;\n            }\n        }\n\n        this._wrapper.style.transformOrigin = `${xOrigin}% ${yOrigin}%`;\n    }\n}\n\nexport default IsoLayer;\n","/*\nCopyright 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport IsoLayer from \"./iso-layer\";\nimport Orientation from \"./utils/orientation\";\nimport Transform from \"./utils/transform\";\n\nimport { getElement, wrapElement, toArray } from \"./utils/helper\";\nimport {\n    SQRT_2,\n    ISO_NONE, ISO_LEFT, ISO_RIGHT, ISO_HORIZONTAL, ISO_VERTICAL,\n    ISO_DEFAULT_SPACING, ISO_DEFAULT_ORIENTATION,\n} from \"./constants\";\nimport { IsoOptions, IsoProgres, Oriented } from \"./types\";\n\nclass Isometrizer implements Oriented {\n    static get ISO_LEFT() { return ISO_LEFT; }\n    static get ISO_RIGHT() { return ISO_RIGHT; }\n    static get ISO_HORIZONTAL() { return ISO_HORIZONTAL; }\n    static get ISO_VERTICAL() { return ISO_VERTICAL; }\n\n    private _element: HTMLElement;\n    private _wrapper: HTMLElement;\n    private _prevProgress: IsoProgres;\n    private _defaultSpacing: number;\n    private _orientation: Orientation;\n    private _layers: IsoLayer[];\n    private _allLayers: IsoLayer[];\n\n    public get orientation() { return this._orientation; }\n\n    constructor(el: HTMLElement | string, options: IsoOptions = {\n        spacing: ISO_DEFAULT_SPACING,\n        orientation: ISO_DEFAULT_ORIENTATION,\n    }) {\n        this._element = getElement(el);\n\n        this._prevProgress = {\n            normal: 0,\n            side: 0,\n            scale: 0,\n            float: 0,\n            childNormal: 0,\n            childSide: 0,\n        };\n\n        this._defaultSpacing = options.spacing || ISO_DEFAULT_SPACING;\n        this._orientation = new Orientation(options.orientation || ISO_DEFAULT_ORIENTATION);\n\n        this._wrapper = wrapElement(this._element);\n\n        this._element.style.transformStyle = \"preserve-3d\";\n        (this._wrapper.style as any).willChange = \"transform\";\n\n        this._layers = this._findLayers();\n        this._allLayers = this._getAllLayers();\n\n        // Initialize\n        this.off();\n    }\n\n    public on(): this {\n        this.progress({\n            normal: 1,\n            side: 1,\n            scale: 1,\n            float: 1,\n            childNormal: 1,\n            childSide: 1,\n        });\n        return this;\n    }\n\n    public off(): this {\n        this.progress({\n            normal: 0,\n            side: 0,\n            scale: 0,\n            float: 0,\n            childNormal: 0,\n            childSide: 0,\n        });\n        return this;\n    }\n\n    public progress(props = this._prevProgress): this {\n        props.normal = props.normal || this._prevProgress.normal;\n        props.side = props.side || this._prevProgress.side;\n        props.scale = props.scale || this._prevProgress.scale;\n        props.float = props.float || this._prevProgress.float;\n        props.childNormal = props.childNormal || this._prevProgress.childNormal;\n        props.childSide = props.childSide || this._prevProgress.childSide;\n\n        const THRESHOLD = 0.001;\n\n        if (props.normal < THRESHOLD) props.normal = 0;\n        if (props.side < THRESHOLD) props.side = 0;\n        if (props.scale < THRESHOLD) props.scale = 0;\n        if (props.float < THRESHOLD) props.float = 0;\n        if (props.childNormal < THRESHOLD) props.childNormal = 0;\n        if (props.childSide < THRESHOLD) props.childSide = 0;\n\n        const parentBbox = this._wrapper.getBoundingClientRect() as DOMRect;\n        const originalBbox = this._element.getBoundingClientRect() as DOMRect;\n        const maxBbox = {\n            top: originalBbox.top,\n            bottom: originalBbox.bottom,\n            left: originalBbox.left,\n            right: originalBbox.right,\n        } as DOMRect;\n        const calculatedScale = this._calcScale(props.scale);\n\n        for (const layer of this._layers) {\n            layer.progress(\n                props.float,\n                props.childNormal,\n                props.childSide,\n                calculatedScale,\n                maxBbox,\n            );\n        }\n\n        // 순서대로 프로퍼티 적용\n        this._rotate({\n            normal: props.normal,\n            side: props.side,\n            scale: props.scale,\n        });\n\n        for (const layer of this._allLayers) {\n            layer.update();\n        }\n\n        this._resize(parentBbox, maxBbox);\n\n        // Update prev values\n        this._prevProgress.normal = props.normal;\n        this._prevProgress.side = props.side;\n        this._prevProgress.scale = props.scale;\n        this._prevProgress.float = props.float;\n        this._prevProgress.childNormal = props.childNormal;\n        this._prevProgress.childSide = props.childSide;\n\n        return this;\n    }\n\n    private _resize(originalBbox: DOMRect, maxBbox: DOMRect): void {\n        maxBbox.width = maxBbox.right - maxBbox.left;\n        maxBbox.height = maxBbox.bottom - maxBbox.top;\n\n        const parentElement = this._wrapper;\n        const marginTop = originalBbox.top - maxBbox.top;\n        const marginBottom = maxBbox.bottom - originalBbox.bottom;\n        const leftDiff = originalBbox.left - maxBbox.left;\n        const rightDiff = maxBbox.right - originalBbox.right;\n\n        const widthDiff = Math.max(leftDiff, 0) - Math.max(rightDiff, 0);\n        const marginRight = Math.max(leftDiff + (rightDiff < 0 ? rightDiff : 0), 0);\n        const marginLeft = Math.max(rightDiff + (leftDiff < 0 ? leftDiff : 0), 0);\n\n        parentElement.style.marginRight = `${marginRight}px`;\n        parentElement.style.marginLeft = `${marginLeft}px`;\n        parentElement.style.marginTop = `${marginTop}px`;\n        parentElement.style.marginBottom = `${marginBottom}px`;\n        // parentElement.style.height = `${maxBbox.height}px`;\n        parentElement.style.transform = `translateX(${widthDiff}px)`; // translateY(${heightDiff}px)`;\n    }\n\n    private _findLayers(): IsoLayer[] {\n        const layers = [];\n\n        for (const child of toArray(this._element.children)) {\n            const layer = new IsoLayer(child as HTMLElement, this, this._defaultSpacing);\n\n            layers.push(layer);\n        }\n        return layers;\n    }\n\n    private _getAllLayers(): IsoLayer[] {\n        const layers: IsoLayer[] = [];\n\n        for (const layer of this._layers) {\n            layers.push(layer);\n            layers.push(...layer.getAllChildLayers());\n        }\n\n        return layers;\n    }\n\n    private _rotate(props: {\n        normal: number;\n        side: number;\n        scale: number;\n    }): void {\n        const normal = props.normal;\n        const side = props.side;\n        const scale = props.scale;\n\n        const transform = new Transform(this._orientation, new Orientation(ISO_NONE));\n\n        // Should be in order of scale -> rotate\n        transform.setScale(this._calcScale(scale));\n        transform.rotateTo({normal, side});\n\n        this._element.style.transform = transform.toString();\n    }\n\n    private _calcScale(val: number): number {\n        const maxScale = SQRT_2;\n        const scaleAmount = 1 + val * (maxScale - 1);\n\n        return scaleAmount;\n    }\n}\n\nexport default Isometrizer;\n"],"names":["ORIENTATION_NOT_SPECIFIED","MATRIX_VALUE_NOT_PROVIDED","Object","Matrix3x3","this","_values","other","Error","_multiply3x3","degree","rad","_degToRad","cos","Math","sin","rotateMatrix","mul","props","x","y","z","scaleX","scaleY","scaleZ","v","map","value","toFixed","flag","i","length","result","ZERO","rowNum","floor","colNum","j","indexThis","indexOther","values","PI","SQRT_2","sqrt","SQRT_3","Orientation","orientationStr","orientations","split","str","sanitizedStr","trim","parseString","toLowerCase","orientations_1","_i","orientation","merge","_val","ISO_LEFT","ISO_HORIZONTAL","isHorizontal","isVertical","isLeft","isRight","val","_matrix","match","ONE","_float","normal","side","degreeZ","_rotationDegree","degreeY","degreeX","rotateZ","rotateY","rotateX","changed","toString4x4","scale","parentOrientation","rotations","_calcRotationDegree","_offset","_element","style","background","float","targetOrientation","_length","Number","_maxLength","bottom","top","left","right","_orientation","transform","_rotation","target","maxLength","transformStyle","document","createElement","position","backfaceVisibility","width","height","xOrigin","yOrigin","transformOrigin","appendChild","wrapElement","element","isLeaf","wrapper","elStyle","getComputedStyle","isFirefox","navigator","userAgent","indexOf","display","overflow","willChange","pointerEvents","bbox","getBoundingClientRect","setWrapperSize","parentElement","replaceChild","toArray","iterable","slice","call","_wrapper","maxBbox","_transform","reset","setFloat","_spacing","_parent","rotateTo","additionalOffset","_a","_panels","panel","progress","panelOffset","offset","_c","_childs","_b","_isLeaf","toString","update","layer","push","layers","child","getAllChildLayers","spacing","topBackground","getAttribute","sideBackground","sideLengthStr","hasPanel","sideLength","panels","topPanelOrientation","sidePanelOrientation","ISO_VERTICAL","topPanel","Panel","sidePanel","defaultSpacing","isParallel","children","parentLayer","IsoLayer","addParallelLayer","tag","tagName","_isWrapper","el","parent","wrapSpacing","fromString","isNormal","isSide","Transform","_setTransformOrigin","_shouldTraverse","_findChilds","_makePanel","options","queryOrElement","querySelector","nodeType","getElement","_prevProgress","childNormal","childSide","_defaultSpacing","_layers","_findLayers","_allLayers","_getAllLayers","off","Isometrizer","THRESHOLD","parentBbox","originalBbox","calculatedScale","_calcScale","_rotate","_resize","marginTop","marginBottom","leftDiff","rightDiff","widthDiff","max","marginRight","marginLeft","setScale"],"mappings":"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"}